<launch>
    <rosparam command="load" file="$(find scripts)/config/evaluation_specification.yaml"/>
    <rosparam command="load" file="$(find scripts)/config/tb2-odom-qualisys.yaml"/>

    <node
        name="ekf_node_map" 
        pkg="robot_localization" 
        type="ekf_localization_node" clear_params="true" output="screen">

        <param name="world_frame" value="map"/>
        <param name="map_frame" value="map"/>
        <param name="odom_frame" value="odom"/>
        <param name="base_link_frame" value="base_footprint"/>

        <param name="odom0" value="/qualisys/mobile_base/odom"/>
        <param name="odom0_differential" value="false"/>
        <rosparam param="odom0_config">[true, true, true,
                                        true, true, true,
                                        false, false, false,
                                        false, false, false,
                                        false, false, false]
        </rosparam>

        <param name="odom1" value="/odom"/>
        <param name="odom1_differential" value="true"/>
        <rosparam param="odom1_config">[false, false, false,
                                        false, false, false,
                                        true, true, false,
                                        false, false, true,
                                        false, false, false]
        </rosparam>

        <!--ordered as x, y, z, roll, pitch, yaw, vx, vy, vz, vroll, vpitch, vyaw, ax, ay, az-->
        <rosparam param="initial_estimate_covariance">
            [0.01, 0,    0,    0,    0,    0,    0,    0,    0,    0,     0,     0,     0,    0,    0,
            0,    0.01, 0,    0,    0,    0,    0,    0,    0,    0,     0,     0,     0,    0,    0,
            0,    0,    0.01, 0,    0,    0,    0,    0,    0,    0,     0,     0,     0,    0,    0,
            0,    0,    0,    0.1, 0,    0,    0,    0,    0,    0,     0,     0,     0,    0,    0,
            0,    0,    0,    0,    0.1, 0,    0,    0,    0,    0,     0,     0,     0,    0,    0,
            0,    0,    0,    0,    0,    0.1, 0,    0,    0,    0,     0,     0,     0,    0,    0,
            0,    0,    0,    0,    0,    0,    1e-9, 0,    0,    0,     0,     0,     0,    0,    0,
            0,    0,    0,    0,    0,    0,    0,    1e-9, 0,    0,     0,     0,     0,    0,    0,
            0,    0,    0,    0,    0,    0,    0,    0,    1e-9, 0,     0,     0,     0,    0,    0,
            0,    0,    0,    0,    0,    0,    0,    0,    0,    1e-9,  0,     0,     0,    0,    0,
            0,    0,    0,    0,    0,    0,    0,    0,    0,    0,     1e-9,  0,     0,    0,    0,
            0,    0,    0,    0,    0,    0,    0,    0,    0,    0,     0,     1e-9,  0,    0,    0,
            0,    0,    0,    0,    0,    0,    0,    0,    0,    0,     0,     0,     1e-9, 0,    0,
            0,    0,    0,    0,    0,    0,    0,    0,    0,    0,     0,     0,     0,    1e-9, 0,
            0,    0,    0,    0,    0,    0,    0,    0,    0,    0,     0,     0,     0,    0,    1e-9]
        </rosparam>
    </node>

    <!--node name="ekf_node_odom" 
          pkg="robot_localization" 
          type="ekf_localization_node" clear_params="true" output="screen">
        <param name="world_frame" value="odom"/>
        <param name="map_frame" value="map"/>
        <param name="odom_frame" value="odom"/>
        <param name="base_link_frame" value="base_footprint"/>
        
        <param name="odom0" value="/odom"/>
        <rosparam param="odom0_config">[false, false, false,
                                        false, false, false,
                                        true, true, false,
                                        false, false, true,
                                        false, false, false]
        </rosparam>
    </node-->
        <!--param name="odom1_differential" value="false"/-->
        <!--rosparam command="load" file="$(find scripts)/config/ekf_turtlebot_qualisys.yaml" /-->


    <node
        name="CoordinateServerNode"
        pkg="scripts"
        type="coordinate_server.py" output="screen">
    </node>
    <node 
        name="OdometryControllerNode" 
        pkg="scripts" 
        type="OdometryController.py" output="screen" required="true">
    </node>/>

    <node
        pkg="tf"
        type="static_transform_publisher"
        name="link_mocap_map_broadcaster"
        args="0 0 0 0 0 0 mocap map 100">
    </node>


    <arg name="record" default="0"/>
    <group if="$(arg record)">
        <node
            name="EKF_Odom_to_Pose_Stamped_Node"
            pkg="scripts"
            type="ekf_odom_to_pose_stamped.py">
        </node>
        <node
            name="Odom_to_Pose_Stamped_Node"
            pkg="scripts"
            type="odom_to_pose_stamped.py">
        </node>
        <node
            name="bag_record" 
            pkg="rosbag" 
            type="record"
            args="-o $(find scripts)/bagfiles/ 
                      /qualisys/mobile_base/pose 
                      /odom_to_pose_stamped 
                      /ekf_odom_to_pose_stamped">
        </node>
    </group>
    <!--to record, type "roslaunch scripts launch_coordinates.launch record:=1"-->

    <arg name="sim" default="0"/>
    <group if="$(arg sim)">
        <node  
            name="qualisys" 
            pkg="mocap_simulator" 
            type="mocap_simulator_node.py" output="screen">
            <param name="frame_rate" value="100"/>
            <param name="publish_tf" value="true"/>
            <param name="fixed_frame_id" value="odom"/>
            <rosparam param="model_list">[mobile_base]</rosparam>
        </node>
    </group>
    <!--to start qualisys simulator, type "roslaunch scripts launch_coordinates.launch sim:=1" -->
</launch>
